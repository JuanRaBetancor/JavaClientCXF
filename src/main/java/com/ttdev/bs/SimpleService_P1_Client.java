
package com.ttdev.bs;


/**
 * Please modify this class to meet your needs
 * This class is not complete
 */
//import javax.ws.rs.client.Client;
//import javax.ws.rs.client.ClientBuilder;
//import javax.ws.rs.core.Response;
import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.WebResource;
import com.sun.jersey.core.util.MultivaluedMapImpl;

//import antlr.Token;

import com.sun.jersey.api.client.ClientResponse;
//import org.apache.cxf.jaxrs.client.WebClient;

import javax.ws.rs.client.Entity;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.MultivaluedMap;

//import java.net.MalformedURLException;
//import java.net.URL;
import org.apache.cxf.jaxrs.ext.form.Form;
//import javax.xml.namespace.QName;
//import javax.xml.ws.Service;
//import org.apache.cxf.rs.security.oauth.data.Token;
import org.apache.commons.lang.StringUtils;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.18
 * 2018-04-17T12:48:03.802-01:00
 * Generated source version: 2.7.18
 * 
 */
public final class SimpleService_P1_Client {

    private static final QName SERVICE_NAME = new QName("http://ttdev.com/ss", "SimpleService");

    private SimpleService_P1_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
    	
    	
    	Client client2 = Client.create();
		
		WebResource webResource = client2.resource("http://pccompshop.com/home/?q=es/endpoint/comment/12");
		ClientResponse response = webResource.accept("application/xml").get(ClientResponse.class);
		Result result = response.getEntity(Result.class);
		//System.out.println(result);
		
		//Creo el objeto
		/*
		Result newComment = result;
		Byte referenciaProducto = 48;
		newComment.setSubject("Comentario creado desde código");
		newComment.getCommentBody().getUnd().getItem().setValue("Body de ejemplo");
		newComment.setName("PEPE");
		newComment.setNid(referenciaProducto);
		*/
		
		int producto = result.getNid();
		int commentid = result.getCid();
		String commentname = result.getName();
		String commentsubject = result.getSubject();
		String body = result.getCommentBody().getUnd().getItem().getValue();
		
		System.out.println("\nINICIANDO LA EJECUCIÓN");
		System.out.println("\nComentario referido:");
		System.out.println("ID del comentario: "+commentid+". Escrito por: "+commentname);
		System.out.println("Asunto -> "+commentsubject);
		System.out.println("Cuerpo -> "+ body);
		
		WebResource webResource2 = client2.resource("http://pccompshop.com/home/?q=es/endpoint/node/"+producto);
		ClientResponse response2 = webResource2.accept("application/xml").get(ClientResponse.class);
		String result2 = response2.getEntity(String.class);
		//System.out.println(result2);
		
		String titulo = StringUtils.substringBetween(result2, "<title>", "</title>");
		String categoria = StringUtils.substringBetween(result2, "<type>", "</type>");
		
		WebResource webResource2P = client2.resource("http://pccompshop.com/home/?q=es/endpoint/user/token");
		ClientResponse response2P = webResource2P.type(MediaType.APPLICATION_FORM_URLENCODED_TYPE).post(ClientResponse.class, null);
		String outputP = response2P.getEntity(String.class);
		String token = StringUtils.substringBetween(outputP, "<token>", "</token>");
		

		MultivaluedMap params = new MultivaluedMapImpl();
		params.add("username", "test");
		params.add("password", "test");
		WebResource webLogin = client2.resource("http://pccompshop.com/home/?q=es/endpoint/user/login");
		ClientResponse responseLogin = webLogin.header(token, "X-CSRF-Token").type(MediaType.APPLICATION_FORM_URLENCODED).post(ClientResponse.class, params);
		String output = responseLogin.getEntity(String.class);
		//System.out.println(output);
		
		
		String email = StringUtils.substringBetween(output, "<mail>", "</mail>");
		String nombre = StringUtils.substringBetween(output, "<name>", "</name>");
		String auth = StringUtils.substringBetween(output, "<roles", "</roles>");
		String isauth = auth.substring(23,41);
		String rol = auth.substring(54,67);
		
	
		System.out.println("\nInformación del usuario logeado:");
		System.out.println("Usuario: "+nombre);
		System.out.println("Correo: "+email);
		System.out.println("¿Está autenticado?: "+isauth);
		System.out.println("Rol: "+rol);
		Date date = new Date();
		DateFormat hourdateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
		String fecha = hourdateFormat.format(date);
		System.out.println("\nInformación de la sesión:");
		System.out.println("Token inicial: "+token);
		String newToken = StringUtils.substringBetween(output, "<token>", "</token>");
		System.out.println("New Token: "+newToken);
		String SessionId = StringUtils.substringBetween(output, "<sessid>", "</sessid>");
		System.out.println("Session ID: "+SessionId);
		String SessionName = StringUtils.substringBetween(output, "<session_name>", "</session_name>");
		System.out.println("Session name: "+SessionName);
		
		// AÑADIMOS UN COMENTARIO
		/*
		WebResource addcomment = client2.resource("http://pccompshop.com/home/?q=es/endpoint/comment/");
		ClientResponse respuestaAdd = addcomment.header(newToken, "X-CSRF-Token").header("cookie",SessionName+"="+SessionId).post(ClientResponse.class, newComment);
		String add = respuestaAdd.getEntity(String.class);
		System.out.println(add);
		*/
    	
        URL wsdlURL = SimpleService_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        SimpleService_Service ss = new SimpleService_Service(wsdlURL, SERVICE_NAME);
        SimpleService port = ss.getP1();  
        
        {
        System.out.println("\nInvocando concatenación SOAP Wrapper!");
        System.out.println("@Param1: "+titulo);
        System.out.println("@Param2: "+categoria);
        java.lang.String _concat_s1 = titulo;
        java.lang.String _concat_s2 = categoria;
        java.lang.String _concat__return = port.concat(_concat_s1, _concat_s2);
        System.out.println("Resultado de la concatenación del servicio SOAP wrapper: ");
        System.out.println(_concat__return);
        
        System.out.println("\nProducto del comentario:");
        System.out.println("Producto de referencia: "+titulo);
		System.out.println("Categoría del producto: "+categoria);
        
        System.out.println("\nModificaciones:");
        System.out.println("Asunto actual: "+result.getSubject());
        result.setSubject("Comentario sobre el producto: "+titulo);
        System.out.println("Nuevo asunto: "+result.getSubject());
        System.out.println("Cuerpo actual:\n "+result.getCommentBody().getUnd().getItem().getValue());
        result.getCommentBody().getUnd().getItem().setValue("Modificado por: "+ nombre + ", el día: " + fecha+".\n"+_concat__return);
        System.out.println("Cuerpo actualizado:\n "+result.getCommentBody().getUnd().getItem().getValue());
        
        WebResource change = client2.resource("http://pccompshop.com/home/?q=es/endpoint/comment/12");
		ClientResponse respuesta = change.header(newToken, "X-CSRF-Token").header("cookie",SessionName+"="+SessionId).put(ClientResponse.class, result);
		String prf = respuesta.getEntity(String.class);
		//System.out.println(prf); //DESCOMENTAR PARA VER ERRORES
		
		// CÓDIGO PARA BORRAR COMENTARIOS
		/*
		WebResource delete = client2.resource("http://pccompshop.com/home/?q=es/endpoint/comment/7");
		ClientResponse respuestaDel = delete.header(newToken, "X-CSRF-Token").header("cookie",SessionName+"="+SessionId).delete(ClientResponse.class);
		String del = respuestaDel.getEntity(String.class);
		System.out.println(del);
		*/
		
		System.out.println("\nFINALIZADA LA EJECUCIÓN");


        }

        System.exit(0);
    }

}
